name: Cypress Test Runner

on:
  workflow_dispatch:
    inputs:
      run_mode:
        description: "Run tests in serial or parallel mode"
        required: true
        type: choice
        default: "serial"
        options:
          - serial
          - parallel

      browsers:
        description: "Comma-separated list of browsers (chrome,firefox,edge)"
        required: false
        default: "chrome"

      instances:
        description: "Number of parallel instances per browser"
        required: false
        default: "1"

      specs:
        description: "Comma-separated spec names (e.g., addProductToWishList,loginTest)"
        required: false
        default: ""

jobs:
  set-spec-pattern:
    runs-on: ubuntu-24.04
    outputs:
      spec_pattern: ${{ steps.convert.outputs.spec_pattern }}
    steps:
      - name: Convert short spec names to full paths
        id: convert
        run: |
          if [ -z "${{ inputs.specs }}" ]; then
            PATTERN="cypress/e2e/**/*.cy.js"
          else
            PATTERN=""
            for name in $(echo "${{ inputs.specs }}" | tr ',' ' '); do
              PATTERN="${PATTERN}cypress/e2e/tests/${name}.cy.js,"
            done
            PATTERN="${PATTERN%,}"  # Remove trailing comma
          fi
          echo "spec_pattern=$PATTERN" >> $GITHUB_OUTPUT

  run-serial:
    if: ${{ inputs.run_mode == 'serial' }}
    needs: set-spec-pattern
    runs-on: ubuntu-24.04

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install Cypress
        run: |
          npm ci
          npx cypress install

      - name: Run Cypress Tests Serially
        run: |
          IFS=',' read -ra BROWSER_LIST <<< "${{ inputs.browsers }}"
          for browser in "${BROWSER_LIST[@]}"; do
            echo "Running Cypress tests on $browser"
            npx cypress run \
              --browser "$browser" \
              --spec "${{ needs.set-spec-pattern.outputs.spec_pattern }}" \
              --record \
              --key ${{ secrets.CYPRESS_RECORD_KEY }} \
              || echo "Tests failed for $browser, continuing with next browser"
          done

  set-matrix:
    if: ${{ inputs.run_mode == 'parallel' }}
    needs: set-spec-pattern
    runs-on: ubuntu-24.04
    outputs:
      matrix: ${{ steps.set.outputs.matrix }}
    steps:
      - name: Set browser-instance matrix
        id: set
        run: |
          BROWSERS="${{ inputs.browsers }}"
          INSTANCES=${{ inputs.instances }}
          MATRIX="["
          for browser in $(echo "$BROWSERS" | tr ',' ' '); do
            for i in $(seq 1 "$INSTANCES"); do
              MATRIX="$MATRIX{\"browser\":\"$browser\",\"instance\":$i},"
            done
          done
          MATRIX="${MATRIX%,}]"  # Remove trailing comma
          echo "matrix=$MATRIX" >> $GITHUB_OUTPUT

  run-parallel:
    if: ${{ inputs.run_mode == 'parallel' }}
    needs: [set-matrix, set-spec-pattern]
    runs-on: ubuntu-24.04
    strategy:
      matrix:
        include: ${{ fromJson(needs.set-matrix.outputs.matrix) }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install Cypress
        run: |
          npm ci
          npx cypress install

      - name: Run Cypress - ${{ matrix.browser }} (Instance ${{ matrix.instance }})
        run: |
          echo "Running on ${{ matrix.browser }} - instance ${{ matrix.instance }}"
          npx cypress run \
            --browser "${{ matrix.browser }}" \
            --spec "${{ needs.set-spec-pattern.outputs.spec_pattern }}" \
            --record \
            --key ${{ secrets.CYPRESS_RECORD_KEY }} \
            --parallel \
            --ci-build-id "${{ github.run_id }}" \
            || echo "Tests failed on ${{ matrix.browser }} - instance ${{ matrix.instance }}"
