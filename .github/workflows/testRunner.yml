name: Cypress Test Runner

on:
  workflow_dispatch:
    inputs:
      run_mode:
        description: "Run tests in serial or parallel mode"
        required: true
        type: choice
        default: "serial"
        options:
          - serial
          - parallel

      browsers:
        description: "Comma-separated list of browsers (chrome,firefox,edge)"
        required: false
        default: "chrome"

      instances:
        description: "Number of parallel instances per browser"
        required: false
        default: "1"

      specs:
        description: "Comma-separated spec names (e.g., addProductToWishList,loginTest) or full glob"
        required: false
        default: "cypress/e2e/**/*.cy.js"

jobs:
  run-serial:
    if: ${{ inputs.run_mode == 'serial' }}
    runs-on: ubuntu-24.04

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install Cypress
        run: |
          npm ci
          npx cypress install

      - name: Prepare spec pattern
        id: prepare
        run: |
          if [[ "${{ inputs.specs }}" == cypress/* ]]; then
            echo "pattern=${{ inputs.specs }}" >> $GITHUB_OUTPUT
          else
            PATTERN=""
            for name in $(echo "${{ inputs.specs }}" | tr ',' ' '); do
              PATTERN="${PATTERN}cypress/e2e/tests/${name}.cy.js,"
            done
            PATTERN="${PATTERN%,}"
            echo "pattern=$PATTERN" >> $GITHUB_OUTPUT
          fi

      - name: Run Cypress Tests Serially
        run: |
          set -e
          IFS=',' read -ra BROWSER_LIST <<< "${{ inputs.browsers }}"
          for browser in "${BROWSER_LIST[@]}"; do
            echo "Running Cypress tests on $browser"
            if ! npx cypress run \
              --browser "$browser" \
              --spec "${{ steps.prepare.outputs.pattern }}" \
              --record \
              --key "${{ secrets.CYPRESS_RECORD_KEY }}"; then
              echo "Tests failed for $browser, continuing..."
            fi
          done

  set-matrix:
    if: ${{ inputs.run_mode == 'parallel' }}
    runs-on: ubuntu-24.04
    outputs:
      matrix: ${{ steps.set.outputs.matrix }}
      pattern: ${{ steps.set.outputs.pattern }}

    steps:
      - name: Prepare matrix and spec pattern
        id: set
        run: |
          BROWSERS="${{ inputs.browsers }}"
          INSTANCES=${{ inputs.instances }}

          # Handle spec pattern
          if [[ "${{ inputs.specs }}" == cypress/* ]]; then
            echo "pattern=${{ inputs.specs }}" >> $GITHUB_OUTPUT
          else
            PATTERN=""
            for name in $(echo "${{ inputs.specs }}" | tr ',' ' '); do
              PATTERN="${PATTERN}cypress/e2e/tests/${name}.cy.js,"
            done
            PATTERN="${PATTERN%,}"
            echo "pattern=$PATTERN" >> $GITHUB_OUTPUT
          fi

          # Generate matrix
          MATRIX="["
          for browser in $(echo "$BROWSERS" | tr ',' ' '); do
            for i in $(seq 1 "$INSTANCES"); do
              MATRIX="${MATRIX}{\"browser\":\"$browser\",\"instance\":$i},"
            done
          done
          MATRIX="${MATRIX%,}]"
          echo "matrix=$MATRIX" >> $GITHUB_OUTPUT

  run-parallel:
    if: ${{ inputs.run_mode == 'parallel' }}
    needs: set-matrix
    runs-on: ubuntu-24.04
    strategy:
      matrix:
        include: ${{ fromJson(needs.set-matrix.outputs.matrix) }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install Cypress
        run: |
          npm ci
          npx cypress install

      - name: Run Cypress - ${{ matrix.browser }} (Instance ${{ matrix.instance }})
        run: |
          echo "Running on ${{ matrix.browser }} - instance ${{ matrix.instance }}"
          npx cypress run \
            --browser "${{ matrix.browser }}" \
            --spec "${{ needs.set-matrix.outputs.pattern }}" \
            --record \
            --key "${{ secrets.CYPRESS_RECORD_KEY }}" \
            --parallel \
            --ci-build-id "${{ github.run_id }}" \
            || echo "Tests failed on ${{ matrix.browser }} - instance ${{ matrix.instance }}"
